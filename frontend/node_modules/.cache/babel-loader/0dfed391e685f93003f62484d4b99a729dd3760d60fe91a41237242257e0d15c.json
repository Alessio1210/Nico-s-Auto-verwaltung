{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nico-s-Auto-verwaltung\\\\frontend\\\\src\\\\components\\\\BookingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CalendarIcon, ClockIcon, ArrowRightIcon, CheckCircleIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingForm({\n  vehicle,\n  onSubmit,\n  onCancel,\n  checkAvailability\n}) {\n  _s();\n  const [formStep, setFormStep] = useState(1);\n  const [totalSteps] = useState(3);\n  const [bookingData, setBookingData] = useState({\n    pickupDate: '',\n    pickupTime: '08:00',\n    returnDate: '',\n    returnTime: '17:00',\n    purpose: '',\n    destination: '',\n    passengers: 1,\n    notes: ''\n  });\n  const [conflicts, setConflicts] = useState([]);\n  const [validated, setValidated] = useState(false);\n\n  // Hilfsfunktion zum Formatieren des Datums während der Eingabe\n  const formatDateInput = input => {\n    // Entferne alle nicht-numerischen Zeichen außer Punkt\n    let cleaned = input.replace(/[^\\d.]/g, '');\n\n    // Erlaube höchstens 2 Punkte\n    const dots = cleaned.split('.').length - 1;\n    if (dots > 2) {\n      cleaned = cleaned.substring(0, cleaned.lastIndexOf('.'));\n    }\n\n    // Automatische Formatierung: füge Punkte ein, wenn nötig\n    if (cleaned.length > 0) {\n      // Erstes Segment (Tag)\n      if (cleaned.length >= 2 && !cleaned.includes('.')) {\n        cleaned = cleaned.substring(0, 2) + '.' + cleaned.substring(2);\n      }\n      // Zweites Segment (Monat)\n      if (cleaned.length >= 5 && cleaned.split('.').length === 2) {\n        const parts = cleaned.split('.');\n        if (parts[1].length >= 2) {\n          cleaned = parts[0] + '.' + parts[1].substring(0, 2) + '.' + parts[1].substring(2);\n        }\n      }\n    }\n    return cleaned;\n  };\n\n  // Hilfsfunktion zum Formatieren der Zeit während der Eingabe\n  const formatTimeInput = input => {\n    // Entferne alle nicht-numerischen Zeichen außer Doppelpunkt\n    let cleaned = input.replace(/[^\\d:]/g, '');\n\n    // Erlaube höchstens 1 Doppelpunkt\n    const colons = cleaned.split(':').length - 1;\n    if (colons > 1) {\n      cleaned = cleaned.substring(0, cleaned.lastIndexOf(':'));\n    }\n\n    // Automatische Formatierung: füge Doppelpunkt ein, wenn nötig\n    if (cleaned.length > 0) {\n      // Erstes Segment (Stunden)\n      if (cleaned.length >= 2 && !cleaned.includes(':')) {\n        cleaned = cleaned.substring(0, 2) + ':' + cleaned.substring(2);\n      }\n\n      // Begrenze Minuten auf 2 Ziffern\n      if (cleaned.includes(':')) {\n        const parts = cleaned.split(':');\n        if (parts[1].length > 2) {\n          cleaned = parts[0] + ':' + parts[1].substring(0, 2);\n        }\n      }\n    }\n    return cleaned;\n  };\n\n  // Hilfsfunktion zur Validierung der Zeitwerte\n  const isValidTime = timeString => {\n    if (!timeString || !timeString.includes(':')) return false;\n    const parts = timeString.split(':');\n    if (parts.length !== 2) return false;\n    const hours = parseInt(parts[0], 10);\n    const minutes = parseInt(parts[1], 10);\n    return !isNaN(hours) && !isNaN(minutes) && hours >= 0 && hours <= 23 && minutes >= 0 && minutes <= 59;\n  };\n\n  // Hilfsfunktion zur Umwandlung von TT.MM.JJJJ in ein Date-Objekt\n  const parseGermanDate = dateString => {\n    if (!dateString || !dateString.includes('.')) return null;\n    const parts = dateString.split('.');\n    if (parts.length !== 3) return null;\n    const day = parseInt(parts[0], 10);\n    const month = parseInt(parts[1], 10) - 1; // Monate sind 0-indexiert\n    const year = parseInt(parts[2], 10);\n    if (isNaN(day) || isNaN(month) || isNaN(year)) return null;\n    if (year < 1000 || year > 9999) return null; // Jahr muss 4-stellig sein\n\n    const date = new Date(year, month, day);\n\n    // Überprüfe, ob das erstellte Datum gültig ist\n    if (date.getDate() !== day || date.getMonth() !== month || date.getFullYear() !== year) {\n      return null; // Ungültiges Datum (z.B. 31.02.2025)\n    }\n    return date;\n  };\n\n  // Hilfsfunktion zur Umwandlung von Date in TT.MM.JJJJ\n  const formatDateToGerman = date => {\n    if (!date) return '';\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n    return `${day}.${month}.${year}`;\n  };\n\n  // Aktuelles Datum berechnen (für min-Werte in den Datumsfeldern)\n  const today = new Date().toISOString().split('T')[0];\n  const todayGerman = formatDateToGerman(new Date());\n\n  // Refs für Fokusbewahrung\n  const inputRefs = {\n    pickupDate: useRef(null),\n    pickupTime: useRef(null),\n    returnDate: useRef(null),\n    returnTime: useRef(null),\n    purpose: useRef(null),\n    destination: useRef(null),\n    passengers: useRef(null),\n    notes: useRef(null)\n  };\n\n  // Aktuelle Feldnamen, die bearbeitet werden\n  const [activeField, setActiveField] = useState(null);\n  // Position des Cursors\n  const [selectionInfo, setSelectionInfo] = useState({\n    start: 0,\n    end: 0\n  });\n\n  // Fokuswiederherstellung nach Rendering\n  useEffect(() => {\n    if (activeField && inputRefs[activeField] && inputRefs[activeField].current) {\n      const input = inputRefs[activeField].current;\n\n      // Unmittelbar den Fokus wiederherstellen (ohne requestAnimationFrame)\n      try {\n        input.focus();\n\n        // Bei Text/Number-Inputs: versuche Cursor-Position wiederherzustellen\n        if (input.type === 'text' || input.type === 'number') {\n          try {\n            input.setSelectionRange(selectionInfo.start, selectionInfo.end);\n          } catch (e) {\n            console.log(\"Konnte Cursor-Position nicht setzen\");\n          }\n        }\n      } catch (e) {\n        console.error(\"Fokussierung fehlgeschlagen:\", e);\n      }\n    }\n  }, [activeField, selectionInfo]);\n\n  // Handler für speziell für den Fokus bei date/time Inputs\n  const handleFocus = e => {\n    const {\n      name\n    } = e.target;\n    setActiveField(name);\n  };\n\n  // Validierung für den aktuellen Schritt\n  const validateStep = () => {\n    switch (formStep) {\n      case 1:\n        // Validiere Datum im Format TT.MM.JJJJ\n        const pickupDateValid = !!parseGermanDate(bookingData.pickupDate);\n        const returnDateValid = !!parseGermanDate(bookingData.returnDate);\n        // Validiere Zeit im Format HH:MM\n        const pickupTimeValid = isValidTime(bookingData.pickupTime);\n        const returnTimeValid = isValidTime(bookingData.returnTime);\n        return pickupDateValid && returnDateValid && pickupTimeValid && returnTimeValid;\n      case 2:\n        return bookingData.purpose && bookingData.destination;\n      case 3:\n        return true;\n      // Letzter Schritt, immer gültig\n      default:\n        return false;\n    }\n  };\n\n  // Führe die Validierung nur aus, wenn sich der formStep ändert\n  useEffect(() => {\n    setValidated(validateStep());\n  }, [formStep]);\n\n  // Handler für Änderungen an Formularfeldern\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      selectionStart,\n      selectionEnd\n    } = e.target;\n\n    // Speichere Cursor-Position für Text-Inputs\n    if (e.target.type === 'text' || e.target.type === 'number') {\n      setSelectionInfo({\n        start: selectionStart || 0,\n        end: selectionEnd || 0\n      });\n    }\n\n    // Markiere das aktive Feld für Fokusbewahrung\n    setActiveField(name);\n    let newValue = value;\n\n    // Spezielles Handling für Datumsfelder mit Formatierung\n    if (name === 'pickupDate' || name === 'returnDate') {\n      newValue = formatDateInput(value);\n\n      // Berechne die neue Cursor-Position nach der Formatierung\n      const addedChars = newValue.length - value.length;\n      if (addedChars > 0 && selectionStart) {\n        setSelectionInfo({\n          start: selectionStart + addedChars,\n          end: selectionEnd + addedChars\n        });\n      }\n\n      // Spezielle Behandlung für Abholdatum: setze auch Rückgabedatum\n      if (name === 'pickupDate') {\n        const pickupDate = parseGermanDate(newValue);\n        const returnDate = parseGermanDate(bookingData.returnDate);\n        if (pickupDate && (!returnDate || pickupDate > returnDate)) {\n          setBookingData(prevData => ({\n            ...prevData,\n            [name]: newValue,\n            returnDate: newValue // Setze Rückgabedatum auf gleiches Datum\n          }));\n          return;\n        }\n      }\n    }\n    // Spezielles Handling für Zeitfelder mit Formatierung\n    else if (name === 'pickupTime' || name === 'returnTime') {\n      newValue = formatTimeInput(value);\n\n      // Berechne die neue Cursor-Position nach der Formatierung\n      const addedChars = newValue.length - value.length;\n      if (addedChars > 0 && selectionStart) {\n        setSelectionInfo({\n          start: selectionStart + addedChars,\n          end: selectionEnd + addedChars\n        });\n      }\n    }\n\n    // Aktualisiere State ohne unnötige Re-Renderings\n    setBookingData(prevData => ({\n      ...prevData,\n      [name]: newValue\n    }));\n\n    // Führe die Validierung direkt hier durch, aber nur für relevante Felder\n    if (formStep === 1 && (name === 'pickupDate' || name === 'returnDate' || name === 'pickupTime' || name === 'returnTime') || formStep === 2 && (name === 'purpose' || name === 'destination')) {\n      setValidated(validateStep());\n    }\n  };\n\n  // Handler für onBlur - prüft nur die Formatierung, aber nicht die Verfügbarkeit\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Prüfe Datumseingaben\n    if (name === 'pickupDate' || name === 'returnDate') {\n      // Überprüfe, ob das Datum vollständig ist\n      const parts = value.split('.');\n\n      // Nur validieren, wenn vollständiges Datum eingegeben wurde\n      if (parts.length === 3 && parts[2].length === 4) {\n        // Prüfe, ob das Datum gültig ist\n        const date = parseGermanDate(value);\n        if (!date) {\n          alert(`Bitte geben Sie ein gültiges Datum im Format TT.MM.JJJJ ein.`);\n          return;\n        }\n      }\n    }\n    // Prüfe Zeiteingaben\n    else if (name === 'pickupTime' || name === 'returnTime') {\n      if (!isValidTime(value)) {\n        alert(`Bitte geben Sie eine gültige Zeit im Format HH:MM ein.`);\n        return;\n      }\n    }\n  };\n\n  // Prüfe Verfügbarkeit und setze Konflikte\n  const checkAvailabilityAndSetConflicts = () => {\n    // Nur prüfen, wenn beide Datums- und Zeitfelder ausgefüllt sind\n    if (bookingData.pickupDate && isValidTime(bookingData.pickupTime) && bookingData.returnDate && isValidTime(bookingData.returnTime) && checkAvailability) {\n      const pickupDate = parseGermanDate(bookingData.pickupDate);\n      const returnDate = parseGermanDate(bookingData.returnDate);\n      if (pickupDate && returnDate) {\n        // Formatiere zu ISO-Format für API-Anfragen\n        const isoPickupDate = pickupDate.toISOString().split('T')[0];\n        const isoReturnDate = returnDate.toISOString().split('T')[0];\n        const startDateTime = `${isoPickupDate}T${bookingData.pickupTime}`;\n        const endDateTime = `${isoReturnDate}T${bookingData.returnTime}`;\n\n        // Prüfe Verfügbarkeit mit der übergebenen Funktion\n        const {\n          isAvailable,\n          conflicts\n        } = checkAvailability(vehicle.id, startDateTime, endDateTime);\n        if (!isAvailable) {\n          // Entferne Benutzernamen aus den Konflikten\n          const anonymizedConflicts = conflicts.map(conflict => ({\n            ...conflict,\n            userName: undefined // Entferne den Benutzernamen\n          }));\n          setConflicts(anonymizedConflicts);\n          return false;\n        } else {\n          setConflicts([]);\n          return true;\n        }\n      }\n    }\n    return true; // Wenn keine Prüfung möglich ist, gilt es als verfügbar\n  };\n\n  // Zum nächsten Schritt gehen\n  const goToNextStep = () => {\n    // Führe Datumsvalidierung hier durch, bevor wir zum nächsten Schritt gehen\n    if (formStep === 1) {\n      // Prüfe, ob die Daten gültig sind\n      const pickupDate = parseGermanDate(bookingData.pickupDate);\n      const returnDate = parseGermanDate(bookingData.returnDate);\n      if (!pickupDate || !returnDate) {\n        alert('Bitte geben Sie gültige Datumswerte im Format TT.MM.JJJJ ein.');\n        return;\n      }\n\n      // Prüfe Zeitwerte\n      if (!isValidTime(bookingData.pickupTime) || !isValidTime(bookingData.returnTime)) {\n        alert('Bitte geben Sie gültige Zeitwerte im Format HH:MM ein.');\n        return;\n      }\n\n      // Prüfe, ob das Abholdatum in der Vergangenheit liegt\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Setze auf Beginn des Tages für korrekten Vergleich\n\n      if (pickupDate < today) {\n        alert('Termine in der Vergangenheit können nicht gebucht werden.');\n        return; // Verhindere das Weitergehen\n      }\n\n      // Prüfe, ob das Rückgabedatum vor dem Abholdatum liegt\n      if (returnDate < pickupDate) {\n        alert('Das Rückgabedatum kann nicht vor dem Abholdatum liegen.');\n        return;\n      }\n\n      // Prüfe, ob das Rückgabedatum gleich dem Abholdatum ist und die Rückgabezeit vor der Abholzeit liegt\n      if (returnDate.getTime() === pickupDate.getTime() && bookingData.returnTime < bookingData.pickupTime) {\n        alert('Die Rückgabezeit kann nicht vor der Abholzeit am selben Tag liegen.');\n        return;\n      }\n\n      // Prüfe auf Konflikte mit anderen Buchungen\n      const isAvailable = checkAvailabilityAndSetConflicts();\n      if (!isAvailable) {\n        if (conflicts.length > 0) {\n          alert('Das Fahrzeug ist im gewählten Zeitraum bereits gebucht. Bitte wählen Sie einen anderen Zeitraum.');\n          return;\n        }\n      }\n    }\n    if (formStep < totalSteps && validateStep()) {\n      setFormStep(formStep + 1);\n    }\n  };\n\n  // Zum vorherigen Schritt gehen\n  const goToPrevStep = () => {\n    if (formStep > 1) {\n      setFormStep(formStep - 1);\n    }\n  };\n\n  // Formular einreichen\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Konvertiere das deutsche Datumsformat zu ISO für die API\n    const pickupDate = parseGermanDate(bookingData.pickupDate);\n    const returnDate = parseGermanDate(bookingData.returnDate);\n    if (!pickupDate || !returnDate) {\n      alert('Bitte geben Sie gültige Datumswerte ein.');\n      return;\n    }\n    if (!isValidTime(bookingData.pickupTime) || !isValidTime(bookingData.returnTime)) {\n      alert('Bitte geben Sie gültige Zeitwerte ein.');\n      return;\n    }\n\n    // Prüfe nochmals auf Konflikte, bevor die Anfrage abgesendet wird\n    const isAvailable = checkAvailabilityAndSetConflicts();\n    if (!isAvailable) {\n      if (conflicts.length > 0) {\n        alert('Das Fahrzeug ist im gewählten Zeitraum bereits gebucht. Bitte wählen Sie einen anderen Zeitraum.');\n        return;\n      }\n    }\n    const isoPickupDate = pickupDate.toISOString().split('T')[0];\n    const isoReturnDate = returnDate.toISOString().split('T')[0];\n    const fullBookingData = {\n      ...bookingData,\n      vehicleId: vehicle.id,\n      vehicleName: `${vehicle.modell} (${vehicle.kennzeichen})`,\n      startDateTime: `${isoPickupDate}T${bookingData.pickupTime}`,\n      endDateTime: `${isoReturnDate}T${bookingData.returnTime}`\n    };\n    onSubmit(fullBookingData);\n  };\n\n  // Fortschrittsbalken\n  const ProgressBar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-600\",\n        children: [\"Schritt \", formStep, \" von \", totalSteps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-medium text-blue-600\",\n        children: [Math.round(formStep / totalSteps * 100), \"% Abgeschlossen\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-200 rounded-full h-2.5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-600 h-2.5 rounded-full transition-all duration-300 ease-in-out\",\n        style: {\n          width: `${formStep / totalSteps * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 5\n  }, this);\n\n  // Komponenten für die verschiedenen Schritte\n  const Step1 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center text-gray-800\",\n      children: \"Wann ben\\xF6tigen Sie das Fahrzeug?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: \"W\\xE4hlen Sie Ihre bevorzugten Abhol- und R\\xFCckgabezeiten\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Abholdatum & Zeit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\",\n              children: /*#__PURE__*/_jsxDEV(CalendarIcon, {\n                className: \"w-5 h-5 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"pickupDate\",\n              placeholder: \"TT.MM.JJJJ\",\n              value: bookingData.pickupDate,\n              onChange: handleChange,\n              onFocus: handleFocus,\n              onBlur: handleBlur,\n              ref: inputRefs.pickupDate,\n              className: \"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative ml-2 w-32\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\",\n              children: /*#__PURE__*/_jsxDEV(ClockIcon, {\n                className: \"w-5 h-5 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"pickupTime\",\n              placeholder: \"HH:MM\",\n              value: bookingData.pickupTime,\n              onChange: handleChange,\n              onFocus: handleFocus,\n              onBlur: handleBlur,\n              ref: inputRefs.pickupTime,\n              className: \"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-base\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"R\\xFCckgabedatum & Zeit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative flex-grow\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\",\n              children: /*#__PURE__*/_jsxDEV(CalendarIcon, {\n                className: \"w-5 h-5 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"returnDate\",\n              placeholder: \"TT.MM.JJJJ\",\n              value: bookingData.returnDate,\n              onChange: handleChange,\n              onFocus: handleFocus,\n              onBlur: handleBlur,\n              ref: inputRefs.returnDate,\n              className: \"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative ml-2 w-32\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\",\n              children: /*#__PURE__*/_jsxDEV(ClockIcon, {\n                className: \"w-5 h-5 text-gray-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"returnTime\",\n              placeholder: \"HH:MM\",\n              value: bookingData.returnTime,\n              onChange: handleChange,\n              onFocus: handleFocus,\n              onBlur: handleBlur,\n              ref: inputRefs.returnTime,\n              className: \"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-base\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n  const Step2 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center text-gray-800\",\n      children: \"Wohin fahren Sie?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: \"Geben Sie den Zweck und das Ziel Ihrer Fahrt an\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Verwendungszweck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"purpose\",\n          value: bookingData.purpose,\n          onChange: handleChange,\n          ref: inputRefs.purpose,\n          placeholder: \"z.B. Kundentermin, Materialtransport\",\n          className: \"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Zielort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"destination\",\n          value: bookingData.destination,\n          onChange: handleChange,\n          ref: inputRefs.destination,\n          placeholder: \"z.B. M\\xFCnchen, Stuttgart\",\n          className: \"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Anzahl Personen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"passengers\",\n          min: \"1\",\n          max: \"9\",\n          value: bookingData.passengers,\n          onChange: handleChange,\n          ref: inputRefs.passengers,\n          className: \"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Zus\\xE4tzliche Hinweise (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"notes\",\n          value: bookingData.notes,\n          onChange: handleChange,\n          ref: inputRefs.notes,\n          rows: \"3\",\n          placeholder: \"z.B. Besondere Anforderungen, Parkm\\xF6glichkeiten, etc.\",\n          className: \"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 5\n  }, this);\n  const Step3 = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center text-gray-800\",\n      children: \"\\xDCberpr\\xFCfen und best\\xE4tigen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-600\",\n      children: \"Bitte \\xFCberpr\\xFCfen Sie Ihre Angaben\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow overflow-hidden sm:rounded-lg mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-5 sm:px-6 bg-gray-50\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg leading-6 font-medium text-gray-900\",\n          children: \"Fahrzeugdetails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"dl\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Fahrzeug\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: [vehicle.modell, \" (\", vehicle.kennzeichen, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Abholdatum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: [bookingData.pickupDate, \" um \", bookingData.pickupTime, \" Uhr\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"R\\xFCckgabedatum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: [bookingData.returnDate, \" um \", bookingData.returnTime, \" Uhr\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Verwendungszweck\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: bookingData.purpose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Zielort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: bookingData.destination\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Anzahl Personen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: bookingData.passengers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this), bookingData.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"dt\", {\n              className: \"text-sm font-medium text-gray-500\",\n              children: \"Hinweise\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"dd\", {\n              className: \"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\",\n              children: bookingData.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 646,\n    columnNumber: 5\n  }, this);\n\n  // Rendere den aktuellen Schritt\n  const renderStep = () => {\n    switch (formStep) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Step2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 16\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Step3, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Step1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-lg max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [renderStep(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: formStep === 1 ? onCancel : goToPrevStep,\n          className: \"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\",\n          children: formStep === 1 ? 'Abbrechen' : 'Zurück'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), formStep < totalSteps ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: goToNextStep,\n          disabled: !validated,\n          className: `px-6 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white flex items-center\n                ${validated ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'}`,\n          children: [\"Weiter\", /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n            className: \"ml-2 h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-6 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 flex items-center\",\n          children: [\"Anfrage senden\", /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            className: \"ml-2 h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 727,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingForm, \"zZ091N3NrbZeWEk1YjB8zrQ16Ls=\");\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CalendarIcon","ClockIcon","ArrowRightIcon","CheckCircleIcon","jsxDEV","_jsxDEV","BookingForm","vehicle","onSubmit","onCancel","checkAvailability","_s","formStep","setFormStep","totalSteps","bookingData","setBookingData","pickupDate","pickupTime","returnDate","returnTime","purpose","destination","passengers","notes","conflicts","setConflicts","validated","setValidated","formatDateInput","input","cleaned","replace","dots","split","length","substring","lastIndexOf","includes","parts","formatTimeInput","colons","isValidTime","timeString","hours","parseInt","minutes","isNaN","parseGermanDate","dateString","day","month","year","date","Date","getDate","getMonth","getFullYear","formatDateToGerman","toString","padStart","today","toISOString","todayGerman","inputRefs","activeField","setActiveField","selectionInfo","setSelectionInfo","start","end","current","focus","type","setSelectionRange","e","console","log","error","handleFocus","name","target","validateStep","pickupDateValid","returnDateValid","pickupTimeValid","returnTimeValid","handleChange","value","selectionStart","selectionEnd","newValue","addedChars","prevData","handleBlur","alert","checkAvailabilityAndSetConflicts","isoPickupDate","isoReturnDate","startDateTime","endDateTime","isAvailable","id","anonymizedConflicts","map","conflict","userName","undefined","goToNextStep","setHours","getTime","goToPrevStep","handleSubmit","preventDefault","fullBookingData","vehicleId","vehicleName","modell","kennzeichen","ProgressBar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","style","width","Step1","placeholder","onChange","onFocus","onBlur","ref","required","Step2","min","max","rows","Step3","renderStep","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Nico-s-Auto-verwaltung/frontend/src/components/BookingForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { CalendarIcon, ClockIcon, ArrowRightIcon, CheckCircleIcon } from '@heroicons/react/24/outline';\r\n\r\nfunction BookingForm({ vehicle, onSubmit, onCancel, checkAvailability }) {\r\n  const [formStep, setFormStep] = useState(1);\r\n  const [totalSteps] = useState(3);\r\n  const [bookingData, setBookingData] = useState({\r\n    pickupDate: '',\r\n    pickupTime: '08:00',\r\n    returnDate: '',\r\n    returnTime: '17:00',\r\n    purpose: '',\r\n    destination: '',\r\n    passengers: 1,\r\n    notes: ''\r\n  });\r\n  const [conflicts, setConflicts] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  // Hilfsfunktion zum Formatieren des Datums während der Eingabe\r\n  const formatDateInput = (input) => {\r\n    // Entferne alle nicht-numerischen Zeichen außer Punkt\r\n    let cleaned = input.replace(/[^\\d.]/g, '');\r\n    \r\n    // Erlaube höchstens 2 Punkte\r\n    const dots = cleaned.split('.').length - 1;\r\n    if (dots > 2) {\r\n      cleaned = cleaned.substring(0, cleaned.lastIndexOf('.'));\r\n    }\r\n    \r\n    // Automatische Formatierung: füge Punkte ein, wenn nötig\r\n    if (cleaned.length > 0) {\r\n      // Erstes Segment (Tag)\r\n      if (cleaned.length >= 2 && !cleaned.includes('.')) {\r\n        cleaned = cleaned.substring(0, 2) + '.' + cleaned.substring(2);\r\n      }\r\n      // Zweites Segment (Monat)\r\n      if (cleaned.length >= 5 && cleaned.split('.').length === 2) {\r\n        const parts = cleaned.split('.');\r\n        if (parts[1].length >= 2) {\r\n          cleaned = parts[0] + '.' + parts[1].substring(0, 2) + '.' + parts[1].substring(2);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return cleaned;\r\n  };\r\n\r\n  // Hilfsfunktion zum Formatieren der Zeit während der Eingabe\r\n  const formatTimeInput = (input) => {\r\n    // Entferne alle nicht-numerischen Zeichen außer Doppelpunkt\r\n    let cleaned = input.replace(/[^\\d:]/g, '');\r\n    \r\n    // Erlaube höchstens 1 Doppelpunkt\r\n    const colons = cleaned.split(':').length - 1;\r\n    if (colons > 1) {\r\n      cleaned = cleaned.substring(0, cleaned.lastIndexOf(':'));\r\n    }\r\n    \r\n    // Automatische Formatierung: füge Doppelpunkt ein, wenn nötig\r\n    if (cleaned.length > 0) {\r\n      // Erstes Segment (Stunden)\r\n      if (cleaned.length >= 2 && !cleaned.includes(':')) {\r\n        cleaned = cleaned.substring(0, 2) + ':' + cleaned.substring(2);\r\n      }\r\n      \r\n      // Begrenze Minuten auf 2 Ziffern\r\n      if (cleaned.includes(':')) {\r\n        const parts = cleaned.split(':');\r\n        if (parts[1].length > 2) {\r\n          cleaned = parts[0] + ':' + parts[1].substring(0, 2);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return cleaned;\r\n  };\r\n\r\n  // Hilfsfunktion zur Validierung der Zeitwerte\r\n  const isValidTime = (timeString) => {\r\n    if (!timeString || !timeString.includes(':')) return false;\r\n    \r\n    const parts = timeString.split(':');\r\n    if (parts.length !== 2) return false;\r\n    \r\n    const hours = parseInt(parts[0], 10);\r\n    const minutes = parseInt(parts[1], 10);\r\n    \r\n    return !isNaN(hours) && !isNaN(minutes) && \r\n           hours >= 0 && hours <= 23 && \r\n           minutes >= 0 && minutes <= 59;\r\n  };\r\n\r\n  // Hilfsfunktion zur Umwandlung von TT.MM.JJJJ in ein Date-Objekt\r\n  const parseGermanDate = (dateString) => {\r\n    if (!dateString || !dateString.includes('.')) return null;\r\n    \r\n    const parts = dateString.split('.');\r\n    if (parts.length !== 3) return null;\r\n    \r\n    const day = parseInt(parts[0], 10);\r\n    const month = parseInt(parts[1], 10) - 1; // Monate sind 0-indexiert\r\n    const year = parseInt(parts[2], 10);\r\n    \r\n    if (isNaN(day) || isNaN(month) || isNaN(year)) return null;\r\n    if (year < 1000 || year > 9999) return null; // Jahr muss 4-stellig sein\r\n    \r\n    const date = new Date(year, month, day);\r\n    \r\n    // Überprüfe, ob das erstellte Datum gültig ist\r\n    if (date.getDate() !== day || date.getMonth() !== month || date.getFullYear() !== year) {\r\n      return null; // Ungültiges Datum (z.B. 31.02.2025)\r\n    }\r\n    \r\n    return date;\r\n  };\r\n\r\n  // Hilfsfunktion zur Umwandlung von Date in TT.MM.JJJJ\r\n  const formatDateToGerman = (date) => {\r\n    if (!date) return '';\r\n    \r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const year = date.getFullYear();\r\n    \r\n    return `${day}.${month}.${year}`;\r\n  };\r\n\r\n  // Aktuelles Datum berechnen (für min-Werte in den Datumsfeldern)\r\n  const today = new Date().toISOString().split('T')[0];\r\n  const todayGerman = formatDateToGerman(new Date());\r\n\r\n  // Refs für Fokusbewahrung\r\n  const inputRefs = {\r\n    pickupDate: useRef(null),\r\n    pickupTime: useRef(null),\r\n    returnDate: useRef(null),\r\n    returnTime: useRef(null),\r\n    purpose: useRef(null),\r\n    destination: useRef(null),\r\n    passengers: useRef(null),\r\n    notes: useRef(null)\r\n  };\r\n\r\n  // Aktuelle Feldnamen, die bearbeitet werden\r\n  const [activeField, setActiveField] = useState(null);\r\n  // Position des Cursors\r\n  const [selectionInfo, setSelectionInfo] = useState({ start: 0, end: 0 });\r\n\r\n  // Fokuswiederherstellung nach Rendering\r\n  useEffect(() => {\r\n    if (activeField && inputRefs[activeField] && inputRefs[activeField].current) {\r\n      const input = inputRefs[activeField].current;\r\n      \r\n      // Unmittelbar den Fokus wiederherstellen (ohne requestAnimationFrame)\r\n      try {\r\n        input.focus();\r\n        \r\n        // Bei Text/Number-Inputs: versuche Cursor-Position wiederherzustellen\r\n        if (input.type === 'text' || input.type === 'number') {\r\n          try {\r\n            input.setSelectionRange(selectionInfo.start, selectionInfo.end);\r\n          } catch (e) {\r\n            console.log(\"Konnte Cursor-Position nicht setzen\");\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Fokussierung fehlgeschlagen:\", e);\r\n      }\r\n    }\r\n  }, [activeField, selectionInfo]);\r\n\r\n  // Handler für speziell für den Fokus bei date/time Inputs\r\n  const handleFocus = (e) => {\r\n    const { name } = e.target;\r\n    setActiveField(name);\r\n  };\r\n\r\n  // Validierung für den aktuellen Schritt\r\n  const validateStep = () => {\r\n    switch (formStep) {\r\n      case 1:\r\n        // Validiere Datum im Format TT.MM.JJJJ\r\n        const pickupDateValid = !!parseGermanDate(bookingData.pickupDate);\r\n        const returnDateValid = !!parseGermanDate(bookingData.returnDate);\r\n        // Validiere Zeit im Format HH:MM\r\n        const pickupTimeValid = isValidTime(bookingData.pickupTime);\r\n        const returnTimeValid = isValidTime(bookingData.returnTime);\r\n        return pickupDateValid && returnDateValid && pickupTimeValid && returnTimeValid;\r\n      case 2:\r\n        return bookingData.purpose && bookingData.destination;\r\n      case 3:\r\n        return true; // Letzter Schritt, immer gültig\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  // Führe die Validierung nur aus, wenn sich der formStep ändert\r\n  useEffect(() => {\r\n    setValidated(validateStep());\r\n  }, [formStep]);\r\n\r\n  // Handler für Änderungen an Formularfeldern\r\n  const handleChange = (e) => {\r\n    const { name, value, selectionStart, selectionEnd } = e.target;\r\n    \r\n    // Speichere Cursor-Position für Text-Inputs\r\n    if (e.target.type === 'text' || e.target.type === 'number') {\r\n      setSelectionInfo({\r\n        start: selectionStart || 0,\r\n        end: selectionEnd || 0\r\n      });\r\n    }\r\n    \r\n    // Markiere das aktive Feld für Fokusbewahrung\r\n    setActiveField(name);\r\n    \r\n    let newValue = value;\r\n    \r\n    // Spezielles Handling für Datumsfelder mit Formatierung\r\n    if (name === 'pickupDate' || name === 'returnDate') {\r\n      newValue = formatDateInput(value);\r\n      \r\n      // Berechne die neue Cursor-Position nach der Formatierung\r\n      const addedChars = newValue.length - value.length;\r\n      if (addedChars > 0 && selectionStart) {\r\n        setSelectionInfo({\r\n          start: selectionStart + addedChars,\r\n          end: selectionEnd + addedChars\r\n        });\r\n      }\r\n      \r\n      // Spezielle Behandlung für Abholdatum: setze auch Rückgabedatum\r\n      if (name === 'pickupDate') {\r\n        const pickupDate = parseGermanDate(newValue);\r\n        const returnDate = parseGermanDate(bookingData.returnDate);\r\n        \r\n        if (pickupDate && (!returnDate || pickupDate > returnDate)) {\r\n          setBookingData(prevData => ({\r\n            ...prevData,\r\n            [name]: newValue,\r\n            returnDate: newValue  // Setze Rückgabedatum auf gleiches Datum\r\n          }));\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    // Spezielles Handling für Zeitfelder mit Formatierung\r\n    else if (name === 'pickupTime' || name === 'returnTime') {\r\n      newValue = formatTimeInput(value);\r\n      \r\n      // Berechne die neue Cursor-Position nach der Formatierung\r\n      const addedChars = newValue.length - value.length;\r\n      if (addedChars > 0 && selectionStart) {\r\n        setSelectionInfo({\r\n          start: selectionStart + addedChars,\r\n          end: selectionEnd + addedChars\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Aktualisiere State ohne unnötige Re-Renderings\r\n    setBookingData(prevData => ({\r\n      ...prevData,\r\n      [name]: newValue\r\n    }));\r\n    \r\n    // Führe die Validierung direkt hier durch, aber nur für relevante Felder\r\n    if (\r\n      (formStep === 1 && (name === 'pickupDate' || name === 'returnDate' || name === 'pickupTime' || name === 'returnTime')) ||\r\n      (formStep === 2 && (name === 'purpose' || name === 'destination'))\r\n    ) {\r\n      setValidated(validateStep());\r\n    }\r\n  };\r\n\r\n  // Handler für onBlur - prüft nur die Formatierung, aber nicht die Verfügbarkeit\r\n  const handleBlur = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Prüfe Datumseingaben\r\n    if (name === 'pickupDate' || name === 'returnDate') {\r\n      // Überprüfe, ob das Datum vollständig ist\r\n      const parts = value.split('.');\r\n      \r\n      // Nur validieren, wenn vollständiges Datum eingegeben wurde\r\n      if (parts.length === 3 && parts[2].length === 4) {\r\n        // Prüfe, ob das Datum gültig ist\r\n        const date = parseGermanDate(value);\r\n        if (!date) {\r\n          alert(`Bitte geben Sie ein gültiges Datum im Format TT.MM.JJJJ ein.`);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    // Prüfe Zeiteingaben\r\n    else if (name === 'pickupTime' || name === 'returnTime') {\r\n      if (!isValidTime(value)) {\r\n        alert(`Bitte geben Sie eine gültige Zeit im Format HH:MM ein.`);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Prüfe Verfügbarkeit und setze Konflikte\r\n  const checkAvailabilityAndSetConflicts = () => {\r\n    // Nur prüfen, wenn beide Datums- und Zeitfelder ausgefüllt sind\r\n    if (\r\n      bookingData.pickupDate && isValidTime(bookingData.pickupTime) &&\r\n      bookingData.returnDate && isValidTime(bookingData.returnTime) &&\r\n      checkAvailability\r\n    ) {\r\n      const pickupDate = parseGermanDate(bookingData.pickupDate);\r\n      const returnDate = parseGermanDate(bookingData.returnDate);\r\n      \r\n      if (pickupDate && returnDate) {\r\n        // Formatiere zu ISO-Format für API-Anfragen\r\n        const isoPickupDate = pickupDate.toISOString().split('T')[0];\r\n        const isoReturnDate = returnDate.toISOString().split('T')[0];\r\n        \r\n        const startDateTime = `${isoPickupDate}T${bookingData.pickupTime}`;\r\n        const endDateTime = `${isoReturnDate}T${bookingData.returnTime}`;\r\n        \r\n        // Prüfe Verfügbarkeit mit der übergebenen Funktion\r\n        const { isAvailable, conflicts } = checkAvailability(\r\n          vehicle.id,\r\n          startDateTime,\r\n          endDateTime\r\n        );\r\n        \r\n        if (!isAvailable) {\r\n          // Entferne Benutzernamen aus den Konflikten\r\n          const anonymizedConflicts = conflicts.map(conflict => ({\r\n            ...conflict,\r\n            userName: undefined // Entferne den Benutzernamen\r\n          }));\r\n          setConflicts(anonymizedConflicts);\r\n          return false;\r\n        } else {\r\n          setConflicts([]);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return true; // Wenn keine Prüfung möglich ist, gilt es als verfügbar\r\n  };\r\n\r\n  // Zum nächsten Schritt gehen\r\n  const goToNextStep = () => {\r\n    // Führe Datumsvalidierung hier durch, bevor wir zum nächsten Schritt gehen\r\n    if (formStep === 1) {\r\n      // Prüfe, ob die Daten gültig sind\r\n      const pickupDate = parseGermanDate(bookingData.pickupDate);\r\n      const returnDate = parseGermanDate(bookingData.returnDate);\r\n      \r\n      if (!pickupDate || !returnDate) {\r\n        alert('Bitte geben Sie gültige Datumswerte im Format TT.MM.JJJJ ein.');\r\n        return;\r\n      }\r\n      \r\n      // Prüfe Zeitwerte\r\n      if (!isValidTime(bookingData.pickupTime) || !isValidTime(bookingData.returnTime)) {\r\n        alert('Bitte geben Sie gültige Zeitwerte im Format HH:MM ein.');\r\n        return;\r\n      }\r\n      \r\n      // Prüfe, ob das Abholdatum in der Vergangenheit liegt\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0); // Setze auf Beginn des Tages für korrekten Vergleich\r\n      \r\n      if (pickupDate < today) {\r\n        alert('Termine in der Vergangenheit können nicht gebucht werden.');\r\n        return; // Verhindere das Weitergehen\r\n      }\r\n      \r\n      // Prüfe, ob das Rückgabedatum vor dem Abholdatum liegt\r\n      if (returnDate < pickupDate) {\r\n        alert('Das Rückgabedatum kann nicht vor dem Abholdatum liegen.');\r\n        return;\r\n      }\r\n      \r\n      // Prüfe, ob das Rückgabedatum gleich dem Abholdatum ist und die Rückgabezeit vor der Abholzeit liegt\r\n      if (\r\n        returnDate.getTime() === pickupDate.getTime() && \r\n        bookingData.returnTime < bookingData.pickupTime\r\n      ) {\r\n        alert('Die Rückgabezeit kann nicht vor der Abholzeit am selben Tag liegen.');\r\n        return;\r\n      }\r\n      \r\n      // Prüfe auf Konflikte mit anderen Buchungen\r\n      const isAvailable = checkAvailabilityAndSetConflicts();\r\n      if (!isAvailable) {\r\n        if (conflicts.length > 0) {\r\n          alert('Das Fahrzeug ist im gewählten Zeitraum bereits gebucht. Bitte wählen Sie einen anderen Zeitraum.');\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (formStep < totalSteps && validateStep()) {\r\n      setFormStep(formStep + 1);\r\n    }\r\n  };\r\n\r\n  // Zum vorherigen Schritt gehen\r\n  const goToPrevStep = () => {\r\n    if (formStep > 1) {\r\n      setFormStep(formStep - 1);\r\n    }\r\n  };\r\n\r\n  // Formular einreichen\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Konvertiere das deutsche Datumsformat zu ISO für die API\r\n    const pickupDate = parseGermanDate(bookingData.pickupDate);\r\n    const returnDate = parseGermanDate(bookingData.returnDate);\r\n    \r\n    if (!pickupDate || !returnDate) {\r\n      alert('Bitte geben Sie gültige Datumswerte ein.');\r\n      return;\r\n    }\r\n    \r\n    if (!isValidTime(bookingData.pickupTime) || !isValidTime(bookingData.returnTime)) {\r\n      alert('Bitte geben Sie gültige Zeitwerte ein.');\r\n      return;\r\n    }\r\n    \r\n    // Prüfe nochmals auf Konflikte, bevor die Anfrage abgesendet wird\r\n    const isAvailable = checkAvailabilityAndSetConflicts();\r\n    if (!isAvailable) {\r\n      if (conflicts.length > 0) {\r\n        alert('Das Fahrzeug ist im gewählten Zeitraum bereits gebucht. Bitte wählen Sie einen anderen Zeitraum.');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    const isoPickupDate = pickupDate.toISOString().split('T')[0];\r\n    const isoReturnDate = returnDate.toISOString().split('T')[0];\r\n    \r\n    const fullBookingData = {\r\n      ...bookingData,\r\n      vehicleId: vehicle.id,\r\n      vehicleName: `${vehicle.modell} (${vehicle.kennzeichen})`,\r\n      startDateTime: `${isoPickupDate}T${bookingData.pickupTime}`,\r\n      endDateTime: `${isoReturnDate}T${bookingData.returnTime}`\r\n    };\r\n    \r\n    onSubmit(fullBookingData);\r\n  };\r\n\r\n  // Fortschrittsbalken\r\n  const ProgressBar = () => (\r\n    <div className=\"mb-8\">\r\n      <div className=\"flex justify-between mb-2\">\r\n        <div className=\"text-sm text-gray-600\">Schritt {formStep} von {totalSteps}</div>\r\n        <div className=\"text-sm font-medium text-blue-600\">{Math.round((formStep / totalSteps) * 100)}% Abgeschlossen</div>\r\n      </div>\r\n      <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n        <div \r\n          className=\"bg-blue-600 h-2.5 rounded-full transition-all duration-300 ease-in-out\" \r\n          style={{ width: `${(formStep / totalSteps) * 100}%` }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Komponenten für die verschiedenen Schritte\r\n  const Step1 = () => (\r\n    <div className=\"space-y-6\">\r\n      <h2 className=\"text-2xl font-bold text-center text-gray-800\">\r\n        Wann benötigen Sie das Fahrzeug?\r\n      </h2>\r\n      <p className=\"text-center text-gray-600\">\r\n        Wählen Sie Ihre bevorzugten Abhol- und Rückgabezeiten\r\n      </p>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-4\">\r\n        <div className=\"space-y-3\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            Abholdatum & Zeit\r\n          </label>\r\n          <div className=\"flex\">\r\n            <div className=\"relative flex-grow\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n                <CalendarIcon className=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"pickupDate\"\r\n                placeholder=\"TT.MM.JJJJ\"\r\n                value={bookingData.pickupDate}\r\n                onChange={handleChange}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                ref={inputRefs.pickupDate}\r\n                className=\"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative ml-2 w-32\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n                <ClockIcon className=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"pickupTime\"\r\n                placeholder=\"HH:MM\"\r\n                value={bookingData.pickupTime}\r\n                onChange={handleChange}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                ref={inputRefs.pickupTime}\r\n                className=\"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-base\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-3\">\r\n          <label className=\"block text-sm font-medium text-gray-700\">\r\n            Rückgabedatum & Zeit\r\n          </label>\r\n          <div className=\"flex\">\r\n            <div className=\"relative flex-grow\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n                <CalendarIcon className=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"returnDate\"\r\n                placeholder=\"TT.MM.JJJJ\"\r\n                value={bookingData.returnDate}\r\n                onChange={handleChange}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                ref={inputRefs.returnDate}\r\n                className=\"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"relative ml-2 w-32\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n                <ClockIcon className=\"w-5 h-5 text-gray-500\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"returnTime\"\r\n                placeholder=\"HH:MM\"\r\n                value={bookingData.returnTime}\r\n                onChange={handleChange}\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n                ref={inputRefs.returnTime}\r\n                className=\"block w-full pl-10 pr-2 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-base\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const Step2 = () => (\r\n    <div className=\"space-y-6\">\r\n      <h2 className=\"text-2xl font-bold text-center text-gray-800\">\r\n        Wohin fahren Sie?\r\n      </h2>\r\n      <p className=\"text-center text-gray-600\">\r\n        Geben Sie den Zweck und das Ziel Ihrer Fahrt an\r\n      </p>\r\n\r\n      <div className=\"space-y-4 mt-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Verwendungszweck\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"purpose\"\r\n            value={bookingData.purpose}\r\n            onChange={handleChange}\r\n            ref={inputRefs.purpose}\r\n            placeholder=\"z.B. Kundentermin, Materialtransport\"\r\n            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Zielort\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"destination\"\r\n            value={bookingData.destination}\r\n            onChange={handleChange}\r\n            ref={inputRefs.destination}\r\n            placeholder=\"z.B. München, Stuttgart\"\r\n            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Anzahl Personen\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"passengers\"\r\n            min=\"1\"\r\n            max=\"9\"\r\n            value={bookingData.passengers}\r\n            onChange={handleChange}\r\n            ref={inputRefs.passengers}\r\n            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Zusätzliche Hinweise (optional)\r\n          </label>\r\n          <textarea\r\n            name=\"notes\"\r\n            value={bookingData.notes}\r\n            onChange={handleChange}\r\n            ref={inputRefs.notes}\r\n            rows=\"3\"\r\n            placeholder=\"z.B. Besondere Anforderungen, Parkmöglichkeiten, etc.\"\r\n            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const Step3 = () => (\r\n    <div className=\"space-y-6\">\r\n      <h2 className=\"text-2xl font-bold text-center text-gray-800\">\r\n        Überprüfen und bestätigen\r\n      </h2>\r\n      <p className=\"text-center text-gray-600\">\r\n        Bitte überprüfen Sie Ihre Angaben\r\n      </p>\r\n\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg mt-4\">\r\n        <div className=\"px-4 py-5 sm:px-6 bg-gray-50\">\r\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\r\n            Fahrzeugdetails\r\n          </h3>\r\n        </div>\r\n        <div className=\"border-t border-gray-200\">\r\n          <dl>\r\n            <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Fahrzeug</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {vehicle.modell} ({vehicle.kennzeichen})\r\n              </dd>\r\n            </div>\r\n            <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Abholdatum</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {bookingData.pickupDate} um {bookingData.pickupTime} Uhr\r\n              </dd>\r\n            </div>\r\n            <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Rückgabedatum</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {bookingData.returnDate} um {bookingData.returnTime} Uhr\r\n              </dd>\r\n            </div>\r\n            <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Verwendungszweck</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {bookingData.purpose}\r\n              </dd>\r\n            </div>\r\n            <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Zielort</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {bookingData.destination}\r\n              </dd>\r\n            </div>\r\n            <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n              <dt className=\"text-sm font-medium text-gray-500\">Anzahl Personen</dt>\r\n              <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                {bookingData.passengers}\r\n              </dd>\r\n            </div>\r\n            {bookingData.notes && (\r\n              <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n                <dt className=\"text-sm font-medium text-gray-500\">Hinweise</dt>\r\n                <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n                  {bookingData.notes}\r\n                </dd>\r\n              </div>\r\n            )}\r\n          </dl>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // Rendere den aktuellen Schritt\r\n  const renderStep = () => {\r\n    switch (formStep) {\r\n      case 1:\r\n        return <Step1 />;\r\n      case 2:\r\n        return <Step2 />;\r\n      case 3:\r\n        return <Step3 />;\r\n      default:\r\n        return <Step1 />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-3xl mx-auto\">\r\n      <ProgressBar />\r\n      \r\n      <form onSubmit={handleSubmit}>\r\n        {renderStep()}\r\n        \r\n        <div className=\"mt-8 flex justify-between\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={formStep === 1 ? onCancel : goToPrevStep}\r\n            className=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n          >\r\n            {formStep === 1 ? 'Abbrechen' : 'Zurück'}\r\n          </button>\r\n          \r\n          {formStep < totalSteps ? (\r\n            <button\r\n              type=\"button\"\r\n              onClick={goToNextStep}\r\n              disabled={!validated}\r\n              className={`px-6 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white flex items-center\r\n                ${validated ? 'bg-blue-600 hover:bg-blue-700' : 'bg-blue-300 cursor-not-allowed'}`}\r\n            >\r\n              Weiter\r\n              <ArrowRightIcon className=\"ml-2 h-4 w-4\" />\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-6 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 flex items-center\"\r\n            >\r\n              Anfrage senden\r\n              <CheckCircleIcon className=\"ml-2 h-4 w-4\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookingForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}