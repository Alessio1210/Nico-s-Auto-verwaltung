{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nico-s-Auto-verwaltung\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GlobalDashboard from './GlobalDashboard';\nimport UserDashboard from './UserDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  user,\n  isAdmin\n}) {\n  _s();\n  const [dashboardData, setDashboardData] = useState({\n    // Gemeinsame Daten für beide Dashboards\n    vehicles: [],\n    bookings: [],\n    statistics: {\n      totalBookings: 0,\n      upcomingBookings: 0,\n      completedBookings: 0,\n      rejectedBookings: 0\n    }\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Daten laden, wenn die Komponente montiert wird\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        // Je nachdem, welche API-Endpunkte implementiert sind, können hier verschiedene\n        // Daten für Benutzer und Administratoren geladen werden\n\n        // Hier könnten für Admin-User mehr Daten geladen werden als für normale Benutzer\n        if (isAdmin) {\n          // Admin-spezifische Daten laden\n          try {\n            const response = await axios.get('http://localhost:5000/api/admin/dashboard');\n            if (response.data) {\n              setDashboardData(response.data);\n            }\n          } catch (adminError) {\n            console.log('Konnte keine Admin-spezifischen Daten laden, verwende Dummy-Daten');\n            // Fehlerbehandlung: Wir stellen sicher, dass wir trotzdem Dashboard-Daten haben\n            // indem wir mit Dummy-Daten arbeiten\n          }\n        } else {\n          // Benutzer-spezifische Daten laden\n          try {\n            const response = await axios.get(`http://localhost:5000/api/users/${user.id}/dashboard`);\n            if (response.data) {\n              setDashboardData(response.data);\n            }\n          } catch (userError) {\n            console.log('Konnte keine benutzerspezifischen Daten laden, verwende Dummy-Daten');\n            // Fehlerbehandlung: Wir stellen sicher, dass wir trotzdem Dashboard-Daten haben\n          }\n        }\n\n        // Gemeinsame Daten für alle Benutzer, falls die spezifischen Anfragen fehlschlagen\n        try {\n          const vehiclesResponse = await axios.get('http://localhost:5000/api/vehicles');\n          if (vehiclesResponse.data) {\n            if (Array.isArray(vehiclesResponse.data)) {\n              setDashboardData(prev => ({\n                ...prev,\n                vehicles: vehiclesResponse.data\n              }));\n            } else if (vehiclesResponse.data.vehicles && Array.isArray(vehiclesResponse.data.vehicles)) {\n              setDashboardData(prev => ({\n                ...prev,\n                vehicles: vehiclesResponse.data.vehicles\n              }));\n            }\n          }\n          const bookingsResponse = await axios.get('http://localhost:5000/api/bookings');\n          if (bookingsResponse.data) {\n            if (Array.isArray(bookingsResponse.data)) {\n              setDashboardData(prev => ({\n                ...prev,\n                bookings: bookingsResponse.data\n              }));\n            } else if (bookingsResponse.data.bookings && Array.isArray(bookingsResponse.data.bookings)) {\n              setDashboardData(prev => ({\n                ...prev,\n                bookings: bookingsResponse.data.bookings\n              }));\n            }\n          }\n        } catch (commonError) {\n          console.log('Konnte keine gemeinsamen Daten laden');\n        }\n      } catch (error) {\n        console.error('Fehler beim Laden der Dashboard-Daten:', error);\n        setError('Die Dashboard-Daten konnten nicht geladen werden. Bitte versuchen Sie es später erneut.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, [isAdmin, user === null || user === void 0 ? void 0 : user.id]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col items-center justify-center my-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Dashboard wird geladen...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col items-center justify-center my-12 text-red-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2 font-semibold\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n        children: \"Erneut laden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Renderlogik: Je nach Benutzerrolle das passende Dashboard anzeigen\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: isAdmin ? /*#__PURE__*/_jsxDEV(GlobalDashboard, {\n      data: dashboardData,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UserDashboard, {\n      data: dashboardData,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"bs3RUZZ/lktddlexS88GTep1JLI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","GlobalDashboard","UserDashboard","jsxDEV","_jsxDEV","Dashboard","user","isAdmin","_s","dashboardData","setDashboardData","vehicles","bookings","statistics","totalBookings","upcomingBookings","completedBookings","rejectedBookings","isLoading","setIsLoading","error","setError","fetchDashboardData","response","get","data","adminError","console","log","id","userError","vehiclesResponse","Array","isArray","prev","bookingsResponse","commonError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["D:/Nico-s-Auto-verwaltung/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport GlobalDashboard from './GlobalDashboard';\r\nimport UserDashboard from './UserDashboard';\r\n\r\nfunction Dashboard({ user, isAdmin }) {\r\n  const [dashboardData, setDashboardData] = useState({\r\n    // Gemeinsame Daten für beide Dashboards\r\n    vehicles: [],\r\n    bookings: [],\r\n    statistics: {\r\n      totalBookings: 0,\r\n      upcomingBookings: 0,\r\n      completedBookings: 0,\r\n      rejectedBookings: 0\r\n    }\r\n  });\r\n  \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Daten laden, wenn die Komponente montiert wird\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        // Je nachdem, welche API-Endpunkte implementiert sind, können hier verschiedene\r\n        // Daten für Benutzer und Administratoren geladen werden\r\n        \r\n        // Hier könnten für Admin-User mehr Daten geladen werden als für normale Benutzer\r\n        if (isAdmin) {\r\n          // Admin-spezifische Daten laden\r\n          try {\r\n            const response = await axios.get('http://localhost:5000/api/admin/dashboard');\r\n            if (response.data) {\r\n              setDashboardData(response.data);\r\n            }\r\n          } catch (adminError) {\r\n            console.log('Konnte keine Admin-spezifischen Daten laden, verwende Dummy-Daten');\r\n            // Fehlerbehandlung: Wir stellen sicher, dass wir trotzdem Dashboard-Daten haben\r\n            // indem wir mit Dummy-Daten arbeiten\r\n          }\r\n        } else {\r\n          // Benutzer-spezifische Daten laden\r\n          try {\r\n            const response = await axios.get(`http://localhost:5000/api/users/${user.id}/dashboard`);\r\n            if (response.data) {\r\n              setDashboardData(response.data);\r\n            }\r\n          } catch (userError) {\r\n            console.log('Konnte keine benutzerspezifischen Daten laden, verwende Dummy-Daten');\r\n            // Fehlerbehandlung: Wir stellen sicher, dass wir trotzdem Dashboard-Daten haben\r\n          }\r\n        }\r\n        \r\n        // Gemeinsame Daten für alle Benutzer, falls die spezifischen Anfragen fehlschlagen\r\n        try {\r\n          const vehiclesResponse = await axios.get('http://localhost:5000/api/vehicles');\r\n          if (vehiclesResponse.data) {\r\n            if (Array.isArray(vehiclesResponse.data)) {\r\n              setDashboardData(prev => ({...prev, vehicles: vehiclesResponse.data}));\r\n            } else if (vehiclesResponse.data.vehicles && Array.isArray(vehiclesResponse.data.vehicles)) {\r\n              setDashboardData(prev => ({...prev, vehicles: vehiclesResponse.data.vehicles}));\r\n            }\r\n          }\r\n\r\n          const bookingsResponse = await axios.get('http://localhost:5000/api/bookings');\r\n          if (bookingsResponse.data) {\r\n            if (Array.isArray(bookingsResponse.data)) {\r\n              setDashboardData(prev => ({...prev, bookings: bookingsResponse.data}));\r\n            } else if (bookingsResponse.data.bookings && Array.isArray(bookingsResponse.data.bookings)) {\r\n              setDashboardData(prev => ({...prev, bookings: bookingsResponse.data.bookings}));\r\n            }\r\n          }\r\n        } catch (commonError) {\r\n          console.log('Konnte keine gemeinsamen Daten laden');\r\n        }\r\n      } catch (error) {\r\n        console.error('Fehler beim Laden der Dashboard-Daten:', error);\r\n        setError('Die Dashboard-Daten konnten nicht geladen werden. Bitte versuchen Sie es später erneut.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, [isAdmin, user?.id]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"w-full flex flex-col items-center justify-center my-12\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mb-4\"></div>\r\n        <p className=\"text-gray-600\">Dashboard wird geladen...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full flex flex-col items-center justify-center my-12 text-red-500\">\r\n        <p className=\"mb-2 font-semibold\">{error}</p>\r\n        <button \r\n          onClick={() => window.location.reload()} \r\n          className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n        >\r\n          Erneut laden\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Renderlogik: Je nach Benutzerrolle das passende Dashboard anzeigen\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {isAdmin ? (\r\n        <GlobalDashboard data={dashboardData} user={user} />\r\n      ) : (\r\n        <UserDashboard data={dashboardData} user={user} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}